imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: search.yml }

framework:
    esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        assets_version: 1.0.0
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        save_path: %session_save_path%
    fragments: ~
    http_method_override: true

sensio_framework_extra:
    view:
        annotations: false

twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        locales: %locales%
        locale_flags: { nl: 'nl', en: 'gb', de: 'de', fr: 'fr' }
    form:
        resources:
            - bootstrap_3_layout.html.twig

assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ CmfCreateBundle ]
    java:           /usr/bin/java
    filters:
        cssrewrite: ~
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        metadata_cache_driver: redis
        query_cache_driver: redis
        filters:
            publishable:
                class:   BehaviorBundle\Filter\PublishableFilter
                enabled: false
            translation:
                class:   BehaviorBundle\Filter\TranslationFilter
                enabled: false

swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    auth_mode: %mailer_auth_mode%
    port:      %mailer_port%
    spool: { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\User
    group:
        group_class: UserBundle\Entity\Group

sonata_user:
    security_acl: true
    manager_type: orm
    class:
        user: UserBundle\Entity\User
        group: UserBundle\Entity\Group

hwi_oauth:
    firewall_name: admin
    resource_owners:
        google:
            type: google
            client_id: %google_oauth_client_id%
            client_secret: %google_oauth_client_secret%
            scope: "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
    fosub:
        username_iterations: 30
        properties:
            google: googleId

user:
    whitelist: %user_whitelist%

sonata_admin:
    title: Application
    title_logo: /bundles/admin/img/logo-title.png
    templates:
        layout: AdminBundle::layout.html.twig
    extensions:
        behavior.publishable.extension:
            implements:
                - BehaviorBundle\Model\PublishableInterface
        behavior.sortable.extension:
            implements:
                - BehaviorBundle\Model\SortableInterface
        behavior.translation.extension:
            implements:
                - BehaviorBundle\Model\TranslationInterface
        behavior.traversable.extension:
            implements:
                - BehaviorBundle\Model\TraversableInterface

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.block.service.text:

ivory_ck_editor:
    default_config: default
    configs:
        default:
            filebrowserBrowseRoute: admin_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_media_media_ckeditor_browser
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            filebrowserImageUploadRoute: admin_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: default

sonata_media:
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
    cdn:
        server:
            path: /uploads/media
    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true
    class:
        media: MediaBundle\Entity\Media
        gallery: MediaBundle\Entity\Gallery
        gallery_has_media: MediaBundle\Entity\GalleryHasMedia

knp_snappy:
    pdf:
        enabled:    true
        binary:     %wkhtmltopdf_path%
        options:
            - { name: dpi, value: 150 }
            - { name: lowquality, value: false }
            - { name: disable-smart-shrinking, value: true }
            - { name: margin-top, value: 0 }
            - { name: margin-right, value: 0 }
            - { name: margin-bottom, value: 0 }
            - { name: margin-left, value: 0 }
    image:
        enabled:    true
        binary:     %wkhtmltoimage_path%
        options:    []

knp_menu:
    twig:
        template: MenuBundle::knp_menu.html.twig

knp_paginator:
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig

jms_i18n_routing:
    default_locale: %locale%
    locales: %locales%
    strategy: prefix_except_default

endroid_google_analytics:
    trackers: %google_analytics_trackers%

fos_rest:
    param_fetcher_listener: true
    routing_loader:
        default_format: json
        include_format: true
    view:
        view_response_listener: force
        formats:
            xml:  true
            json: true
        templating_formats:
            html: true
    format_listener:
        rules:
            - { path: ^/api/, priorities: [ json ], fallback_format: json, prefer_extension: true }
            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
    exception:
        codes:
            Symfony\Component\Routing\Exception\ResourceNotFoundException: 404
            Doctrine\ORM\OptimisticLockException: HTTP_CONFLICT
        messages:
            Symfony\Component\Routing\Exception\ResourceNotFoundException: true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    body_listener: true

jms_serializer:
    metadata:
        directories:
            news:
                namespace_prefix: NewsBundle
                path: "@NewsBundle/Resources/config/serializer"
            page:
                namespace_prefix: PageBundle
                path: "@PageBundle/Resources/config/serializer"

nelmio_api_doc:
    name: API
    sandbox:
        enabled: true

fos_oauth_server:
    db_driver:            orm
    client_class:         OAuthBundle\Entity\Client
    access_token_class:   OAuthBundle\Entity\AccessToken
    refresh_token_class:  OAuthBundle\Entity\RefreshToken
    auth_code_class:      OAuthBundle\Entity\AuthCode
    service:
        user_provider:    fos_user.user_manager

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
            options:
                prefix: %redis_prefix%
            logging: %kernel.debug%
        cache:
            type: predis
            alias: cache
            dsn: redis://localhost/1
            options:
                prefix: %redis_prefix%
            logging: false
    session:
        client: default
    doctrine:
        metadata_cache:
            client: cache
            entity_manager: default
            document_manager: default
        result_cache:
            client: cache
            entity_manager: [default, read]
        query_cache:
            client: cache
            entity_manager: default
    monolog:
        client: cache
        key: monolog
    swiftmailer:
        client: default
        key: swiftmailer

cmf_create:
    security:
        role: ROLE_ADMIN
        checker_service: ~
    object_mapper_service_id: app.create.object_mapper
    persistence:
        phpcr:
            enabled: false
            manager_name: ~

old_sound_rabbit_mq:
    connections:
        default:
            host: localhost
            port: 5672
            user: guest
            password: guest
            vhost: /
            lazy: true
    producers:
        message:
            connection: default
            exchange_options: { name: message, type: direct }
    consumers:
        message:
            connection: default
            exchange_options: { name: message, type: direct }
            queue_options: { name: message }
            callback: messaging.consumer.message
    
parameters:
    sonata.user.admin.user.class: UserBundle\Admin\UserAdmin
